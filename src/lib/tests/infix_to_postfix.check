#include "smartcalc.h"


#suite infix_to_postfix
#test sample
  const char* expr = "2 / (3 + 2) * 5";

  char *res = NULL;
  SmartCalcError rc = smartcalc_expr_infix_to_postfix(expr, &res);

  ck_assert_int_eq(rc, SMARTCALC_ERR_SUCCESS);
  if (rc == SMARTCALC_ERR_SUCCESS) {
    const char* exp = "2 3 2 + / 5 *";
    ck_assert_str_eq(res, exp);
  }


#test minus_binary
  const char* expr = "2-2";

  char *res = NULL;
  SmartCalcError rc = smartcalc_expr_infix_to_postfix(expr, &res);

  ck_assert_int_eq(rc, SMARTCALC_ERR_SUCCESS);
  if (rc == SMARTCALC_ERR_SUCCESS) {
    const char* exp = "2 2 -";
    ck_assert_str_eq(res, exp);
  }


#test minus_unary_first_with_single_number
  const char* expr = "-2";

  char *res = NULL;
  SmartCalcError rc = smartcalc_expr_infix_to_postfix(expr, &res);

  ck_assert_int_eq(rc, SMARTCALC_ERR_SUCCESS);
  if (rc == SMARTCALC_ERR_SUCCESS) {
    const char* exp = "2 -";
    ck_assert_str_eq(res, exp);
  }


#test minus_unary_first_with_sum
  const char* expr = "-2+2";

  char *res = NULL;
  SmartCalcError rc = smartcalc_expr_infix_to_postfix(expr, &res);

  ck_assert_int_eq(rc, SMARTCALC_ERR_SUCCESS);
  if (rc == SMARTCALC_ERR_SUCCESS) {
    const char* exp = "2 - 2 +";
    ck_assert_str_eq(res, exp);
  }


#test minus_unary_first_with_parenthesis_sum
  const char* expr = "-(2+2)";

  char *res = NULL;
  SmartCalcError rc = smartcalc_expr_infix_to_postfix(expr, &res);

  ck_assert_int_eq(rc, SMARTCALC_ERR_SUCCESS);
  if (rc == SMARTCALC_ERR_SUCCESS) {
    const char* exp = "2 2 + -";
    ck_assert_str_eq(res, exp);
  }


#test minus_unary_after_lparenthesis_with_single_number
  const char* expr = "4-(-2)";

  char *res = NULL;
  SmartCalcError rc = smartcalc_expr_infix_to_postfix(expr, &res);

  ck_assert_int_eq(rc, SMARTCALC_ERR_SUCCESS);
  if (rc == SMARTCALC_ERR_SUCCESS) {
    const char* exp = "4 2 - -";
    ck_assert_str_eq(res, exp);
  }


#test minus_unary_after_lparenthesis_with_sum
  const char* expr = "4-(-2+8)";

  char *res = NULL;
  SmartCalcError rc = smartcalc_expr_infix_to_postfix(expr, &res);

  ck_assert_int_eq(rc, SMARTCALC_ERR_SUCCESS);
  if (rc == SMARTCALC_ERR_SUCCESS) {
    const char* exp = "4 2 - 8 + -";
    ck_assert_str_eq(res, exp);
  }
